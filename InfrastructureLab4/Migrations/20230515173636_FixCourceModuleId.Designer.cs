// <auto-generated />
using System;
using InfrastructureLab4.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfrastructureLab4.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20230515173636_FixCourceModuleId")]
    partial class FixCourceModuleId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainLab3.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("column_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cources", (string)null);
                });

            modelBuilder.Entity("DomainLab3.CourceEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CourceModuleId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.HasIndex("CourceModuleId")
                        .IsUnique();

                    b.HasIndex("EnrollmentId");

                    b.ToTable("cource_enrollments", (string)null);
                });

            modelBuilder.Entity("DomainLab3.CourceMatherial", b =>
                {
                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CourceModuleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ModuleId")
                        .HasName("cource_module_id");

                    b.HasIndex("CourceId");

                    b.ToTable("cource_matherial", (string)null);
                });

            modelBuilder.Entity("DomainLab3.CourceModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EnrollmentKey")
                        .HasColumnType("int");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId")
                        .IsUnique();

                    b.ToTable("cource_module_status", (string)null);
                });

            modelBuilder.Entity("DomainLab3.CourceStatus", b =>
                {
                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("EnrollmentId")
                        .IsUnique();

                    b.ToTable("cource_status", (string)null);
                });

            modelBuilder.Entity("DomainLab3.CourceEnrollment", b =>
                {
                    b.HasOne("DomainLab3.Cource", "Cource")
                        .WithMany("CourceEnrollments")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLab3.CourceModule", "CourceModule")
                        .WithOne("Enrollment")
                        .HasForeignKey("DomainLab3.CourceEnrollment", "CourceModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLab3.CourceStatus", "CourceStatus")
                        .WithMany("CourceEnrollments")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");

                    b.Navigation("CourceModule");

                    b.Navigation("CourceStatus");
                });

            modelBuilder.Entity("DomainLab3.CourceMatherial", b =>
                {
                    b.HasOne("DomainLab3.Cource", "Cource")
                        .WithMany("CourceMatherials")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("DomainLab3.CourceModule", b =>
                {
                    b.HasOne("DomainLab3.CourceMatherial", "Matherial")
                        .WithOne("CourceModule")
                        .HasForeignKey("DomainLab3.CourceModule", "ModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Matherial");
                });

            modelBuilder.Entity("DomainLab3.Cource", b =>
                {
                    b.Navigation("CourceEnrollments");

                    b.Navigation("CourceMatherials");
                });

            modelBuilder.Entity("DomainLab3.CourceMatherial", b =>
                {
                    b.Navigation("CourceModule")
                        .IsRequired();
                });

            modelBuilder.Entity("DomainLab3.CourceModule", b =>
                {
                    b.Navigation("Enrollment")
                        .IsRequired();
                });

            modelBuilder.Entity("DomainLab3.CourceStatus", b =>
                {
                    b.Navigation("CourceEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
